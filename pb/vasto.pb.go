// Code generated by protoc-gen-go.
// source: vasto.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	vasto.proto

It has these top-level messages:
	BalanceRequest
	StoreMessage
	ClientMessage
	Topology
	Cluster
	NodeStatus
	StoreResource
	Location
	StoreHeartbeat
	ClientHeartbeat
	Empty
	Requests
	Responses
	Request
	PutRequest
	PutResponse
	DeleteRequest
	DeleteResponse
	GetRequest
	GetResponse
	GetByPrefixRequest
	GetByPrefixResponse
	Response
	KeyValue
	CopyDoneMessge
	BootstrapCopyRequest
	BootstrapCopyResponse
	PullUpdateRequest
	PullUpdateResponse
	UpdateEntry
	ListRequest
	ListResponse
	ResizeRequest
	ResizeProgress
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NodeStatus_Status int32

const (
	NodeStatus_EMPTY     NodeStatus_Status = 0
	NodeStatus_BOOTSTRAP NodeStatus_Status = 1
	NodeStatus_READY     NodeStatus_Status = 2
)

var NodeStatus_Status_name = map[int32]string{
	0: "EMPTY",
	1: "BOOTSTRAP",
	2: "READY",
}
var NodeStatus_Status_value = map[string]int32{
	"EMPTY":     0,
	"BOOTSTRAP": 1,
	"READY":     2,
}

func (x NodeStatus_Status) String() string {
	return proto.EnumName(NodeStatus_Status_name, int32(x))
}
func (NodeStatus_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5, 0} }

// ////////////////////////////////////////////////
// 1. master received request to balance the data
type BalanceRequest struct {
	DataCenter string `protobuf:"bytes,1,opt,name=data_center,json=dataCenter" json:"data_center,omitempty"`
	StoreGroup string `protobuf:"bytes,2,opt,name=store_group,json=storeGroup" json:"store_group,omitempty"`
	StoreCount uint32 `protobuf:"varint,3,opt,name=store_count,json=storeCount" json:"store_count,omitempty"`
}

func (m *BalanceRequest) Reset()                    { *m = BalanceRequest{} }
func (m *BalanceRequest) String() string            { return proto.CompactTextString(m) }
func (*BalanceRequest) ProtoMessage()               {}
func (*BalanceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *BalanceRequest) GetDataCenter() string {
	if m != nil {
		return m.DataCenter
	}
	return ""
}

func (m *BalanceRequest) GetStoreGroup() string {
	if m != nil {
		return m.StoreGroup
	}
	return ""
}

func (m *BalanceRequest) GetStoreCount() uint32 {
	if m != nil {
		return m.StoreCount
	}
	return 0
}

type StoreMessage struct {
}

func (m *StoreMessage) Reset()                    { *m = StoreMessage{} }
func (m *StoreMessage) String() string            { return proto.CompactTextString(m) }
func (*StoreMessage) ProtoMessage()               {}
func (*StoreMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ClientMessage struct {
	Cluster *Cluster                           `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	Updates *ClientMessage_StoreResourceUpdate `protobuf:"bytes,2,opt,name=updates" json:"updates,omitempty"`
	Resize  *ClientMessage_Resize              `protobuf:"bytes,3,opt,name=resize" json:"resize,omitempty"`
}

func (m *ClientMessage) Reset()                    { *m = ClientMessage{} }
func (m *ClientMessage) String() string            { return proto.CompactTextString(m) }
func (*ClientMessage) ProtoMessage()               {}
func (*ClientMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ClientMessage) GetCluster() *Cluster {
	if m != nil {
		return m.Cluster
	}
	return nil
}

func (m *ClientMessage) GetUpdates() *ClientMessage_StoreResourceUpdate {
	if m != nil {
		return m.Updates
	}
	return nil
}

func (m *ClientMessage) GetResize() *ClientMessage_Resize {
	if m != nil {
		return m.Resize
	}
	return nil
}

type ClientMessage_StoreResourceUpdate struct {
	Stores   []*StoreResource `protobuf:"bytes,1,rep,name=stores" json:"stores,omitempty"`
	IsDelete bool             `protobuf:"varint,2,opt,name=is_delete,json=isDelete" json:"is_delete,omitempty"`
}

func (m *ClientMessage_StoreResourceUpdate) Reset()         { *m = ClientMessage_StoreResourceUpdate{} }
func (m *ClientMessage_StoreResourceUpdate) String() string { return proto.CompactTextString(m) }
func (*ClientMessage_StoreResourceUpdate) ProtoMessage()    {}
func (*ClientMessage_StoreResourceUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{2, 0}
}

func (m *ClientMessage_StoreResourceUpdate) GetStores() []*StoreResource {
	if m != nil {
		return m.Stores
	}
	return nil
}

func (m *ClientMessage_StoreResourceUpdate) GetIsDelete() bool {
	if m != nil {
		return m.IsDelete
	}
	return false
}

type ClientMessage_Resize struct {
	CurrentClusterSize uint32 `protobuf:"varint,1,opt,name=current_cluster_size,json=currentClusterSize" json:"current_cluster_size,omitempty"`
	NextClusterSize    uint32 `protobuf:"varint,2,opt,name=next_cluster_size,json=nextClusterSize" json:"next_cluster_size,omitempty"`
}

func (m *ClientMessage_Resize) Reset()                    { *m = ClientMessage_Resize{} }
func (m *ClientMessage_Resize) String() string            { return proto.CompactTextString(m) }
func (*ClientMessage_Resize) ProtoMessage()               {}
func (*ClientMessage_Resize) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 1} }

func (m *ClientMessage_Resize) GetCurrentClusterSize() uint32 {
	if m != nil {
		return m.CurrentClusterSize
	}
	return 0
}

func (m *ClientMessage_Resize) GetNextClusterSize() uint32 {
	if m != nil {
		return m.NextClusterSize
	}
	return 0
}

type Topology struct {
	DataCenterClusters map[string]*Cluster `protobuf:"bytes,1,rep,name=data_center_clusters,json=dataCenterClusters" json:"data_center_clusters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Topology) Reset()                    { *m = Topology{} }
func (m *Topology) String() string            { return proto.CompactTextString(m) }
func (*Topology) ProtoMessage()               {}
func (*Topology) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Topology) GetDataCenterClusters() map[string]*Cluster {
	if m != nil {
		return m.DataCenterClusters
	}
	return nil
}

type Cluster struct {
	DataCenter          string           `protobuf:"bytes,1,opt,name=data_center,json=dataCenter" json:"data_center,omitempty"`
	Stores              []*StoreResource `protobuf:"bytes,2,rep,name=stores" json:"stores,omitempty"`
	ExpectedClusterSize uint32           `protobuf:"varint,3,opt,name=expected_cluster_size,json=expectedClusterSize" json:"expected_cluster_size,omitempty"`
	CurrentClusterSize  uint32           `protobuf:"varint,4,opt,name=current_cluster_size,json=currentClusterSize" json:"current_cluster_size,omitempty"`
	NextClusterSize     uint32           `protobuf:"varint,5,opt,name=next_cluster_size,json=nextClusterSize" json:"next_cluster_size,omitempty"`
}

func (m *Cluster) Reset()                    { *m = Cluster{} }
func (m *Cluster) String() string            { return proto.CompactTextString(m) }
func (*Cluster) ProtoMessage()               {}
func (*Cluster) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Cluster) GetDataCenter() string {
	if m != nil {
		return m.DataCenter
	}
	return ""
}

func (m *Cluster) GetStores() []*StoreResource {
	if m != nil {
		return m.Stores
	}
	return nil
}

func (m *Cluster) GetExpectedClusterSize() uint32 {
	if m != nil {
		return m.ExpectedClusterSize
	}
	return 0
}

func (m *Cluster) GetCurrentClusterSize() uint32 {
	if m != nil {
		return m.CurrentClusterSize
	}
	return 0
}

func (m *Cluster) GetNextClusterSize() uint32 {
	if m != nil {
		return m.NextClusterSize
	}
	return 0
}

type NodeStatus struct {
	Id     uint32            `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Status NodeStatus_Status `protobuf:"varint,2,opt,name=status,enum=pb.NodeStatus_Status" json:"status,omitempty"`
}

func (m *NodeStatus) Reset()                    { *m = NodeStatus{} }
func (m *NodeStatus) String() string            { return proto.CompactTextString(m) }
func (*NodeStatus) ProtoMessage()               {}
func (*NodeStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *NodeStatus) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *NodeStatus) GetStatus() NodeStatus_Status {
	if m != nil {
		return m.Status
	}
	return NodeStatus_EMPTY
}

type StoreResource struct {
	Id           int32                  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Network      string                 `protobuf:"bytes,2,opt,name=network" json:"network,omitempty"`
	Address      string                 `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
	AdminAddress string                 `protobuf:"bytes,4,opt,name=admin_address,json=adminAddress" json:"admin_address,omitempty"`
	NodeStatuses map[uint32]*NodeStatus `protobuf:"bytes,5,rep,name=node_statuses,json=nodeStatuses" json:"node_statuses,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *StoreResource) Reset()                    { *m = StoreResource{} }
func (m *StoreResource) String() string            { return proto.CompactTextString(m) }
func (*StoreResource) ProtoMessage()               {}
func (*StoreResource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *StoreResource) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *StoreResource) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *StoreResource) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *StoreResource) GetAdminAddress() string {
	if m != nil {
		return m.AdminAddress
	}
	return ""
}

func (m *StoreResource) GetNodeStatuses() map[uint32]*NodeStatus {
	if m != nil {
		return m.NodeStatuses
	}
	return nil
}

type Location struct {
	DataCenter string `protobuf:"bytes,1,opt,name=data_center,json=dataCenter" json:"data_center,omitempty"`
	Network    string `protobuf:"bytes,2,opt,name=network" json:"network,omitempty"`
	Address    string `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
}

func (m *Location) Reset()                    { *m = Location{} }
func (m *Location) String() string            { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()               {}
func (*Location) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Location) GetDataCenter() string {
	if m != nil {
		return m.DataCenter
	}
	return ""
}

func (m *Location) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *Location) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// ////////////////////////////////////////////////
type StoreHeartbeat struct {
	DataCenter string         `protobuf:"bytes,1,opt,name=data_center,json=dataCenter" json:"data_center,omitempty"`
	Store      *StoreResource `protobuf:"bytes,2,opt,name=store" json:"store,omitempty"`
}

func (m *StoreHeartbeat) Reset()                    { *m = StoreHeartbeat{} }
func (m *StoreHeartbeat) String() string            { return proto.CompactTextString(m) }
func (*StoreHeartbeat) ProtoMessage()               {}
func (*StoreHeartbeat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *StoreHeartbeat) GetDataCenter() string {
	if m != nil {
		return m.DataCenter
	}
	return ""
}

func (m *StoreHeartbeat) GetStore() *StoreResource {
	if m != nil {
		return m.Store
	}
	return nil
}

type ClientHeartbeat struct {
	Location *Location `protobuf:"bytes,1,opt,name=location" json:"location,omitempty"`
}

func (m *ClientHeartbeat) Reset()                    { *m = ClientHeartbeat{} }
func (m *ClientHeartbeat) String() string            { return proto.CompactTextString(m) }
func (*ClientHeartbeat) ProtoMessage()               {}
func (*ClientHeartbeat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ClientHeartbeat) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

// ////////////////////////////////////////////////
// // data queries
// ////////////////////////////////////////////////
type Requests struct {
	Requests []*Request `protobuf:"bytes,1,rep,name=requests" json:"requests,omitempty"`
}

func (m *Requests) Reset()                    { *m = Requests{} }
func (m *Requests) String() string            { return proto.CompactTextString(m) }
func (*Requests) ProtoMessage()               {}
func (*Requests) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *Requests) GetRequests() []*Request {
	if m != nil {
		return m.Requests
	}
	return nil
}

type Responses struct {
	Responses []*Response `protobuf:"bytes,1,rep,name=responses" json:"responses,omitempty"`
}

func (m *Responses) Reset()                    { *m = Responses{} }
func (m *Responses) String() string            { return proto.CompactTextString(m) }
func (*Responses) ProtoMessage()               {}
func (*Responses) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *Responses) GetResponses() []*Response {
	if m != nil {
		return m.Responses
	}
	return nil
}

type Request struct {
	Put         *PutRequest         `protobuf:"bytes,1,opt,name=put" json:"put,omitempty"`
	Get         *GetRequest         `protobuf:"bytes,2,opt,name=get" json:"get,omitempty"`
	GetByPrefix *GetByPrefixRequest `protobuf:"bytes,3,opt,name=get_by_prefix,json=getByPrefix" json:"get_by_prefix,omitempty"`
	Delete      *DeleteRequest      `protobuf:"bytes,4,opt,name=delete" json:"delete,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *Request) GetPut() *PutRequest {
	if m != nil {
		return m.Put
	}
	return nil
}

func (m *Request) GetGet() *GetRequest {
	if m != nil {
		return m.Get
	}
	return nil
}

func (m *Request) GetGetByPrefix() *GetByPrefixRequest {
	if m != nil {
		return m.GetByPrefix
	}
	return nil
}

func (m *Request) GetDelete() *DeleteRequest {
	if m != nil {
		return m.Delete
	}
	return nil
}

type PutRequest struct {
	Replica       uint32    `protobuf:"varint,1,opt,name=replica" json:"replica,omitempty"`
	PartitionHash uint64    `protobuf:"varint,2,opt,name=partition_hash,json=partitionHash" json:"partition_hash,omitempty"`
	KeyValue      *KeyValue `protobuf:"bytes,3,opt,name=key_value,json=keyValue" json:"key_value,omitempty"`
	TtlSecond     uint32    `protobuf:"varint,4,opt,name=ttl_second,json=ttlSecond" json:"ttl_second,omitempty"`
}

func (m *PutRequest) Reset()                    { *m = PutRequest{} }
func (m *PutRequest) String() string            { return proto.CompactTextString(m) }
func (*PutRequest) ProtoMessage()               {}
func (*PutRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *PutRequest) GetReplica() uint32 {
	if m != nil {
		return m.Replica
	}
	return 0
}

func (m *PutRequest) GetPartitionHash() uint64 {
	if m != nil {
		return m.PartitionHash
	}
	return 0
}

func (m *PutRequest) GetKeyValue() *KeyValue {
	if m != nil {
		return m.KeyValue
	}
	return nil
}

func (m *PutRequest) GetTtlSecond() uint32 {
	if m != nil {
		return m.TtlSecond
	}
	return 0
}

type PutResponse struct {
	Ok     bool   `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
}

func (m *PutResponse) Reset()                    { *m = PutResponse{} }
func (m *PutResponse) String() string            { return proto.CompactTextString(m) }
func (*PutResponse) ProtoMessage()               {}
func (*PutResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *PutResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *PutResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type DeleteRequest struct {
	Replica       uint32 `protobuf:"varint,1,opt,name=replica" json:"replica,omitempty"`
	PartitionHash uint64 `protobuf:"varint,2,opt,name=partition_hash,json=partitionHash" json:"partition_hash,omitempty"`
	Key           []byte `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *DeleteRequest) GetReplica() uint32 {
	if m != nil {
		return m.Replica
	}
	return 0
}

func (m *DeleteRequest) GetPartitionHash() uint64 {
	if m != nil {
		return m.PartitionHash
	}
	return 0
}

func (m *DeleteRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type DeleteResponse struct {
	Ok     bool   `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *DeleteResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *DeleteResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type GetRequest struct {
	Replica uint32 `protobuf:"varint,1,opt,name=replica" json:"replica,omitempty"`
	Key     []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *GetRequest) GetReplica() uint32 {
	if m != nil {
		return m.Replica
	}
	return 0
}

func (m *GetRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type GetResponse struct {
	Ok       bool      `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
	Status   string    `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	KeyValue *KeyValue `protobuf:"bytes,3,opt,name=key_value,json=keyValue" json:"key_value,omitempty"`
}

func (m *GetResponse) Reset()                    { *m = GetResponse{} }
func (m *GetResponse) String() string            { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()               {}
func (*GetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *GetResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *GetResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *GetResponse) GetKeyValue() *KeyValue {
	if m != nil {
		return m.KeyValue
	}
	return nil
}

type GetByPrefixRequest struct {
	Replica     uint32 `protobuf:"varint,1,opt,name=replica" json:"replica,omitempty"`
	Prefix      []byte `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Limit       uint32 `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	LastSeenKey []byte `protobuf:"bytes,4,opt,name=last_seen_key,json=lastSeenKey,proto3" json:"last_seen_key,omitempty"`
}

func (m *GetByPrefixRequest) Reset()                    { *m = GetByPrefixRequest{} }
func (m *GetByPrefixRequest) String() string            { return proto.CompactTextString(m) }
func (*GetByPrefixRequest) ProtoMessage()               {}
func (*GetByPrefixRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *GetByPrefixRequest) GetReplica() uint32 {
	if m != nil {
		return m.Replica
	}
	return 0
}

func (m *GetByPrefixRequest) GetPrefix() []byte {
	if m != nil {
		return m.Prefix
	}
	return nil
}

func (m *GetByPrefixRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetByPrefixRequest) GetLastSeenKey() []byte {
	if m != nil {
		return m.LastSeenKey
	}
	return nil
}

type GetByPrefixResponse struct {
	Ok        bool        `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
	Status    string      `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
	KeyValues []*KeyValue `protobuf:"bytes,3,rep,name=key_values,json=keyValues" json:"key_values,omitempty"`
}

func (m *GetByPrefixResponse) Reset()                    { *m = GetByPrefixResponse{} }
func (m *GetByPrefixResponse) String() string            { return proto.CompactTextString(m) }
func (*GetByPrefixResponse) ProtoMessage()               {}
func (*GetByPrefixResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *GetByPrefixResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *GetByPrefixResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *GetByPrefixResponse) GetKeyValues() []*KeyValue {
	if m != nil {
		return m.KeyValues
	}
	return nil
}

type Response struct {
	Put         *PutResponse         `protobuf:"bytes,1,opt,name=put" json:"put,omitempty"`
	Get         *GetResponse         `protobuf:"bytes,2,opt,name=get" json:"get,omitempty"`
	GetByPrefix *GetByPrefixResponse `protobuf:"bytes,3,opt,name=get_by_prefix,json=getByPrefix" json:"get_by_prefix,omitempty"`
	Delete      *DeleteResponse      `protobuf:"bytes,4,opt,name=delete" json:"delete,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *Response) GetPut() *PutResponse {
	if m != nil {
		return m.Put
	}
	return nil
}

func (m *Response) GetGet() *GetResponse {
	if m != nil {
		return m.Get
	}
	return nil
}

func (m *Response) GetGetByPrefix() *GetByPrefixResponse {
	if m != nil {
		return m.GetByPrefix
	}
	return nil
}

func (m *Response) GetDelete() *DeleteResponse {
	if m != nil {
		return m.Delete
	}
	return nil
}

type KeyValue struct {
	Key   []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *KeyValue) Reset()                    { *m = KeyValue{} }
func (m *KeyValue) String() string            { return proto.CompactTextString(m) }
func (*KeyValue) ProtoMessage()               {}
func (*KeyValue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *KeyValue) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *KeyValue) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

// ////////////////////////////////////////////////
// // data copying
// ////////////////////////////////////////////////
type CopyDoneMessge struct {
	Shard           int32 `protobuf:"varint,1,opt,name=shard" json:"shard,omitempty"`
	CopyStartTimeNs int64 `protobuf:"varint,2,opt,name=copy_start_time_ns,json=copyStartTimeNs" json:"copy_start_time_ns,omitempty"`
}

func (m *CopyDoneMessge) Reset()                    { *m = CopyDoneMessge{} }
func (m *CopyDoneMessge) String() string            { return proto.CompactTextString(m) }
func (*CopyDoneMessge) ProtoMessage()               {}
func (*CopyDoneMessge) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *CopyDoneMessge) GetShard() int32 {
	if m != nil {
		return m.Shard
	}
	return 0
}

func (m *CopyDoneMessge) GetCopyStartTimeNs() int64 {
	if m != nil {
		return m.CopyStartTimeNs
	}
	return 0
}

type BootstrapCopyRequest struct {
	NodeId uint32 `protobuf:"varint,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
}

func (m *BootstrapCopyRequest) Reset()                    { *m = BootstrapCopyRequest{} }
func (m *BootstrapCopyRequest) String() string            { return proto.CompactTextString(m) }
func (*BootstrapCopyRequest) ProtoMessage()               {}
func (*BootstrapCopyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *BootstrapCopyRequest) GetNodeId() uint32 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

type BootstrapCopyResponse struct {
	KeyValues          []*KeyValue                               `protobuf:"bytes,1,rep,name=key_values,json=keyValues" json:"key_values,omitempty"`
	BinlogTailProgress *BootstrapCopyResponse_BinlogTailProgress `protobuf:"bytes,2,opt,name=binlogTailProgress" json:"binlogTailProgress,omitempty"`
}

func (m *BootstrapCopyResponse) Reset()                    { *m = BootstrapCopyResponse{} }
func (m *BootstrapCopyResponse) String() string            { return proto.CompactTextString(m) }
func (*BootstrapCopyResponse) ProtoMessage()               {}
func (*BootstrapCopyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *BootstrapCopyResponse) GetKeyValues() []*KeyValue {
	if m != nil {
		return m.KeyValues
	}
	return nil
}

func (m *BootstrapCopyResponse) GetBinlogTailProgress() *BootstrapCopyResponse_BinlogTailProgress {
	if m != nil {
		return m.BinlogTailProgress
	}
	return nil
}

// this message is only sent at the end of copying
type BootstrapCopyResponse_BinlogTailProgress struct {
	Segment uint32 `protobuf:"varint,1,opt,name=segment" json:"segment,omitempty"`
	Offset  uint64 `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
}

func (m *BootstrapCopyResponse_BinlogTailProgress) Reset() {
	*m = BootstrapCopyResponse_BinlogTailProgress{}
}
func (m *BootstrapCopyResponse_BinlogTailProgress) String() string { return proto.CompactTextString(m) }
func (*BootstrapCopyResponse_BinlogTailProgress) ProtoMessage()    {}
func (*BootstrapCopyResponse_BinlogTailProgress) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{26, 0}
}

func (m *BootstrapCopyResponse_BinlogTailProgress) GetSegment() uint32 {
	if m != nil {
		return m.Segment
	}
	return 0
}

func (m *BootstrapCopyResponse_BinlogTailProgress) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type PullUpdateRequest struct {
	NodeId  uint32 `protobuf:"varint,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	Segment uint32 `protobuf:"varint,2,opt,name=segment" json:"segment,omitempty"`
	Offset  uint64 `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	Limit   uint32 `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
}

func (m *PullUpdateRequest) Reset()                    { *m = PullUpdateRequest{} }
func (m *PullUpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*PullUpdateRequest) ProtoMessage()               {}
func (*PullUpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *PullUpdateRequest) GetNodeId() uint32 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *PullUpdateRequest) GetSegment() uint32 {
	if m != nil {
		return m.Segment
	}
	return 0
}

func (m *PullUpdateRequest) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *PullUpdateRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type PullUpdateResponse struct {
	NextSegment uint32         `protobuf:"varint,1,opt,name=next_segment,json=nextSegment" json:"next_segment,omitempty"`
	NextOffset  uint64         `protobuf:"varint,2,opt,name=next_offset,json=nextOffset" json:"next_offset,omitempty"`
	Entries     []*UpdateEntry `protobuf:"bytes,3,rep,name=entries" json:"entries,omitempty"`
	OutOfSync   bool           `protobuf:"varint,4,opt,name=out_of_sync,json=outOfSync" json:"out_of_sync,omitempty"`
}

func (m *PullUpdateResponse) Reset()                    { *m = PullUpdateResponse{} }
func (m *PullUpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*PullUpdateResponse) ProtoMessage()               {}
func (*PullUpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *PullUpdateResponse) GetNextSegment() uint32 {
	if m != nil {
		return m.NextSegment
	}
	return 0
}

func (m *PullUpdateResponse) GetNextOffset() uint64 {
	if m != nil {
		return m.NextOffset
	}
	return 0
}

func (m *PullUpdateResponse) GetEntries() []*UpdateEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *PullUpdateResponse) GetOutOfSync() bool {
	if m != nil {
		return m.OutOfSync
	}
	return false
}

type UpdateEntry struct {
	PartitionHash uint64 `protobuf:"varint,3,opt,name=partition_hash,json=partitionHash" json:"partition_hash,omitempty"`
	UpdatedAtNs   uint64 `protobuf:"varint,4,opt,name=updated_at_ns,json=updatedAtNs" json:"updated_at_ns,omitempty"`
	TtlSecond     uint32 `protobuf:"varint,5,opt,name=ttl_second,json=ttlSecond" json:"ttl_second,omitempty"`
	Crc           uint32 `protobuf:"varint,6,opt,name=crc" json:"crc,omitempty"`
	IsDelete      bool   `protobuf:"varint,7,opt,name=isDelete" json:"isDelete,omitempty"`
	Key           []byte `protobuf:"bytes,8,opt,name=key,proto3" json:"key,omitempty"`
	Value         []byte `protobuf:"bytes,9,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *UpdateEntry) Reset()                    { *m = UpdateEntry{} }
func (m *UpdateEntry) String() string            { return proto.CompactTextString(m) }
func (*UpdateEntry) ProtoMessage()               {}
func (*UpdateEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *UpdateEntry) GetPartitionHash() uint64 {
	if m != nil {
		return m.PartitionHash
	}
	return 0
}

func (m *UpdateEntry) GetUpdatedAtNs() uint64 {
	if m != nil {
		return m.UpdatedAtNs
	}
	return 0
}

func (m *UpdateEntry) GetTtlSecond() uint32 {
	if m != nil {
		return m.TtlSecond
	}
	return 0
}

func (m *UpdateEntry) GetCrc() uint32 {
	if m != nil {
		return m.Crc
	}
	return 0
}

func (m *UpdateEntry) GetIsDelete() bool {
	if m != nil {
		return m.IsDelete
	}
	return false
}

func (m *UpdateEntry) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *UpdateEntry) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

// ////////////////////////////////////////////////
// // admin
// ////////////////////////////////////////////////
type ListRequest struct {
	DataCenter string `protobuf:"bytes,1,opt,name=data_center,json=dataCenter" json:"data_center,omitempty"`
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *ListRequest) GetDataCenter() string {
	if m != nil {
		return m.DataCenter
	}
	return ""
}

type ListResponse struct {
	Cluster     *Cluster `protobuf:"bytes,1,opt,name=cluster" json:"cluster,omitempty"`
	ClientCount uint32   `protobuf:"varint,2,opt,name=client_count,json=clientCount" json:"client_count,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *ListResponse) GetCluster() *Cluster {
	if m != nil {
		return m.Cluster
	}
	return nil
}

func (m *ListResponse) GetClientCount() uint32 {
	if m != nil {
		return m.ClientCount
	}
	return 0
}

type ResizeRequest struct {
	DataCenter  string `protobuf:"bytes,1,opt,name=data_center,json=dataCenter" json:"data_center,omitempty"`
	ClusterSize uint32 `protobuf:"varint,2,opt,name=cluster_size,json=clusterSize" json:"cluster_size,omitempty"`
}

func (m *ResizeRequest) Reset()                    { *m = ResizeRequest{} }
func (m *ResizeRequest) String() string            { return proto.CompactTextString(m) }
func (*ResizeRequest) ProtoMessage()               {}
func (*ResizeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *ResizeRequest) GetDataCenter() string {
	if m != nil {
		return m.DataCenter
	}
	return ""
}

func (m *ResizeRequest) GetClusterSize() uint32 {
	if m != nil {
		return m.ClusterSize
	}
	return 0
}

type ResizeProgress struct {
	Error                     string `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	Progress                  string `protobuf:"bytes,2,opt,name=progress" json:"progress,omitempty"`
	HasNotifiedClientsToStart bool   `protobuf:"varint,3,opt,name=hasNotifiedClientsToStart" json:"hasNotifiedClientsToStart,omitempty"`
	HasNotifiedStoresToStart  bool   `protobuf:"varint,4,opt,name=hasNotifiedStoresToStart" json:"hasNotifiedStoresToStart,omitempty"`
	AreStoresSplit            bool   `protobuf:"varint,5,opt,name=areStoresSplit" json:"areStoresSplit,omitempty"`
	AreStoresReplicated       bool   `protobuf:"varint,6,opt,name=areStoresReplicated" json:"areStoresReplicated,omitempty"`
	AreStoresCaughtUp         bool   `protobuf:"varint,7,opt,name=areStoresCaughtUp" json:"areStoresCaughtUp,omitempty"`
	HasNotifiedClientsToStop  bool   `protobuf:"varint,8,opt,name=hasNotifiedClientsToStop" json:"hasNotifiedClientsToStop,omitempty"`
	HasNotifiedStoresToStop   bool   `protobuf:"varint,9,opt,name=hasNotifiedStoresToStop" json:"hasNotifiedStoresToStop,omitempty"`
}

func (m *ResizeProgress) Reset()                    { *m = ResizeProgress{} }
func (m *ResizeProgress) String() string            { return proto.CompactTextString(m) }
func (*ResizeProgress) ProtoMessage()               {}
func (*ResizeProgress) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *ResizeProgress) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ResizeProgress) GetProgress() string {
	if m != nil {
		return m.Progress
	}
	return ""
}

func (m *ResizeProgress) GetHasNotifiedClientsToStart() bool {
	if m != nil {
		return m.HasNotifiedClientsToStart
	}
	return false
}

func (m *ResizeProgress) GetHasNotifiedStoresToStart() bool {
	if m != nil {
		return m.HasNotifiedStoresToStart
	}
	return false
}

func (m *ResizeProgress) GetAreStoresSplit() bool {
	if m != nil {
		return m.AreStoresSplit
	}
	return false
}

func (m *ResizeProgress) GetAreStoresReplicated() bool {
	if m != nil {
		return m.AreStoresReplicated
	}
	return false
}

func (m *ResizeProgress) GetAreStoresCaughtUp() bool {
	if m != nil {
		return m.AreStoresCaughtUp
	}
	return false
}

func (m *ResizeProgress) GetHasNotifiedClientsToStop() bool {
	if m != nil {
		return m.HasNotifiedClientsToStop
	}
	return false
}

func (m *ResizeProgress) GetHasNotifiedStoresToStop() bool {
	if m != nil {
		return m.HasNotifiedStoresToStop
	}
	return false
}

func init() {
	proto.RegisterType((*BalanceRequest)(nil), "pb.BalanceRequest")
	proto.RegisterType((*StoreMessage)(nil), "pb.StoreMessage")
	proto.RegisterType((*ClientMessage)(nil), "pb.ClientMessage")
	proto.RegisterType((*ClientMessage_StoreResourceUpdate)(nil), "pb.ClientMessage.StoreResourceUpdate")
	proto.RegisterType((*ClientMessage_Resize)(nil), "pb.ClientMessage.Resize")
	proto.RegisterType((*Topology)(nil), "pb.Topology")
	proto.RegisterType((*Cluster)(nil), "pb.Cluster")
	proto.RegisterType((*NodeStatus)(nil), "pb.NodeStatus")
	proto.RegisterType((*StoreResource)(nil), "pb.StoreResource")
	proto.RegisterType((*Location)(nil), "pb.Location")
	proto.RegisterType((*StoreHeartbeat)(nil), "pb.StoreHeartbeat")
	proto.RegisterType((*ClientHeartbeat)(nil), "pb.ClientHeartbeat")
	proto.RegisterType((*Empty)(nil), "pb.Empty")
	proto.RegisterType((*Requests)(nil), "pb.Requests")
	proto.RegisterType((*Responses)(nil), "pb.Responses")
	proto.RegisterType((*Request)(nil), "pb.Request")
	proto.RegisterType((*PutRequest)(nil), "pb.PutRequest")
	proto.RegisterType((*PutResponse)(nil), "pb.PutResponse")
	proto.RegisterType((*DeleteRequest)(nil), "pb.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "pb.DeleteResponse")
	proto.RegisterType((*GetRequest)(nil), "pb.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "pb.GetResponse")
	proto.RegisterType((*GetByPrefixRequest)(nil), "pb.GetByPrefixRequest")
	proto.RegisterType((*GetByPrefixResponse)(nil), "pb.GetByPrefixResponse")
	proto.RegisterType((*Response)(nil), "pb.Response")
	proto.RegisterType((*KeyValue)(nil), "pb.KeyValue")
	proto.RegisterType((*CopyDoneMessge)(nil), "pb.CopyDoneMessge")
	proto.RegisterType((*BootstrapCopyRequest)(nil), "pb.BootstrapCopyRequest")
	proto.RegisterType((*BootstrapCopyResponse)(nil), "pb.BootstrapCopyResponse")
	proto.RegisterType((*BootstrapCopyResponse_BinlogTailProgress)(nil), "pb.BootstrapCopyResponse.BinlogTailProgress")
	proto.RegisterType((*PullUpdateRequest)(nil), "pb.PullUpdateRequest")
	proto.RegisterType((*PullUpdateResponse)(nil), "pb.PullUpdateResponse")
	proto.RegisterType((*UpdateEntry)(nil), "pb.UpdateEntry")
	proto.RegisterType((*ListRequest)(nil), "pb.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "pb.ListResponse")
	proto.RegisterType((*ResizeRequest)(nil), "pb.ResizeRequest")
	proto.RegisterType((*ResizeProgress)(nil), "pb.ResizeProgress")
	proto.RegisterEnum("pb.NodeStatus_Status", NodeStatus_Status_name, NodeStatus_Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for VastoMaster service

type VastoMasterClient interface {
	RegisterStore(ctx context.Context, opts ...grpc.CallOption) (VastoMaster_RegisterStoreClient, error)
	RegisterClient(ctx context.Context, opts ...grpc.CallOption) (VastoMaster_RegisterClientClient, error)
	ListStores(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	ResizeCluster(ctx context.Context, in *ResizeRequest, opts ...grpc.CallOption) (VastoMaster_ResizeClusterClient, error)
}

type vastoMasterClient struct {
	cc *grpc.ClientConn
}

func NewVastoMasterClient(cc *grpc.ClientConn) VastoMasterClient {
	return &vastoMasterClient{cc}
}

func (c *vastoMasterClient) RegisterStore(ctx context.Context, opts ...grpc.CallOption) (VastoMaster_RegisterStoreClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_VastoMaster_serviceDesc.Streams[0], c.cc, "/pb.VastoMaster/RegisterStore", opts...)
	if err != nil {
		return nil, err
	}
	x := &vastoMasterRegisterStoreClient{stream}
	return x, nil
}

type VastoMaster_RegisterStoreClient interface {
	Send(*StoreHeartbeat) error
	Recv() (*StoreMessage, error)
	grpc.ClientStream
}

type vastoMasterRegisterStoreClient struct {
	grpc.ClientStream
}

func (x *vastoMasterRegisterStoreClient) Send(m *StoreHeartbeat) error {
	return x.ClientStream.SendMsg(m)
}

func (x *vastoMasterRegisterStoreClient) Recv() (*StoreMessage, error) {
	m := new(StoreMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *vastoMasterClient) RegisterClient(ctx context.Context, opts ...grpc.CallOption) (VastoMaster_RegisterClientClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_VastoMaster_serviceDesc.Streams[1], c.cc, "/pb.VastoMaster/RegisterClient", opts...)
	if err != nil {
		return nil, err
	}
	x := &vastoMasterRegisterClientClient{stream}
	return x, nil
}

type VastoMaster_RegisterClientClient interface {
	Send(*ClientHeartbeat) error
	Recv() (*ClientMessage, error)
	grpc.ClientStream
}

type vastoMasterRegisterClientClient struct {
	grpc.ClientStream
}

func (x *vastoMasterRegisterClientClient) Send(m *ClientHeartbeat) error {
	return x.ClientStream.SendMsg(m)
}

func (x *vastoMasterRegisterClientClient) Recv() (*ClientMessage, error) {
	m := new(ClientMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *vastoMasterClient) ListStores(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := grpc.Invoke(ctx, "/pb.VastoMaster/ListStores", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vastoMasterClient) ResizeCluster(ctx context.Context, in *ResizeRequest, opts ...grpc.CallOption) (VastoMaster_ResizeClusterClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_VastoMaster_serviceDesc.Streams[2], c.cc, "/pb.VastoMaster/ResizeCluster", opts...)
	if err != nil {
		return nil, err
	}
	x := &vastoMasterResizeClusterClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type VastoMaster_ResizeClusterClient interface {
	Recv() (*ResizeProgress, error)
	grpc.ClientStream
}

type vastoMasterResizeClusterClient struct {
	grpc.ClientStream
}

func (x *vastoMasterResizeClusterClient) Recv() (*ResizeProgress, error) {
	m := new(ResizeProgress)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for VastoMaster service

type VastoMasterServer interface {
	RegisterStore(VastoMaster_RegisterStoreServer) error
	RegisterClient(VastoMaster_RegisterClientServer) error
	ListStores(context.Context, *ListRequest) (*ListResponse, error)
	ResizeCluster(*ResizeRequest, VastoMaster_ResizeClusterServer) error
}

func RegisterVastoMasterServer(s *grpc.Server, srv VastoMasterServer) {
	s.RegisterService(&_VastoMaster_serviceDesc, srv)
}

func _VastoMaster_RegisterStore_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(VastoMasterServer).RegisterStore(&vastoMasterRegisterStoreServer{stream})
}

type VastoMaster_RegisterStoreServer interface {
	Send(*StoreMessage) error
	Recv() (*StoreHeartbeat, error)
	grpc.ServerStream
}

type vastoMasterRegisterStoreServer struct {
	grpc.ServerStream
}

func (x *vastoMasterRegisterStoreServer) Send(m *StoreMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *vastoMasterRegisterStoreServer) Recv() (*StoreHeartbeat, error) {
	m := new(StoreHeartbeat)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _VastoMaster_RegisterClient_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(VastoMasterServer).RegisterClient(&vastoMasterRegisterClientServer{stream})
}

type VastoMaster_RegisterClientServer interface {
	Send(*ClientMessage) error
	Recv() (*ClientHeartbeat, error)
	grpc.ServerStream
}

type vastoMasterRegisterClientServer struct {
	grpc.ServerStream
}

func (x *vastoMasterRegisterClientServer) Send(m *ClientMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *vastoMasterRegisterClientServer) Recv() (*ClientHeartbeat, error) {
	m := new(ClientHeartbeat)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _VastoMaster_ListStores_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VastoMasterServer).ListStores(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.VastoMaster/ListStores",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VastoMasterServer).ListStores(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VastoMaster_ResizeCluster_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ResizeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(VastoMasterServer).ResizeCluster(m, &vastoMasterResizeClusterServer{stream})
}

type VastoMaster_ResizeClusterServer interface {
	Send(*ResizeProgress) error
	grpc.ServerStream
}

type vastoMasterResizeClusterServer struct {
	grpc.ServerStream
}

func (x *vastoMasterResizeClusterServer) Send(m *ResizeProgress) error {
	return x.ServerStream.SendMsg(m)
}

var _VastoMaster_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.VastoMaster",
	HandlerType: (*VastoMasterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListStores",
			Handler:    _VastoMaster_ListStores_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RegisterStore",
			Handler:       _VastoMaster_RegisterStore_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "RegisterClient",
			Handler:       _VastoMaster_RegisterClient_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "ResizeCluster",
			Handler:       _VastoMaster_ResizeCluster_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "vasto.proto",
}

// Client API for VastoStore service

type VastoStoreClient interface {
	BootstrapCopy(ctx context.Context, in *BootstrapCopyRequest, opts ...grpc.CallOption) (VastoStore_BootstrapCopyClient, error)
	TailBinlog(ctx context.Context, in *PullUpdateRequest, opts ...grpc.CallOption) (VastoStore_TailBinlogClient, error)
}

type vastoStoreClient struct {
	cc *grpc.ClientConn
}

func NewVastoStoreClient(cc *grpc.ClientConn) VastoStoreClient {
	return &vastoStoreClient{cc}
}

func (c *vastoStoreClient) BootstrapCopy(ctx context.Context, in *BootstrapCopyRequest, opts ...grpc.CallOption) (VastoStore_BootstrapCopyClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_VastoStore_serviceDesc.Streams[0], c.cc, "/pb.VastoStore/BootstrapCopy", opts...)
	if err != nil {
		return nil, err
	}
	x := &vastoStoreBootstrapCopyClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type VastoStore_BootstrapCopyClient interface {
	Recv() (*BootstrapCopyResponse, error)
	grpc.ClientStream
}

type vastoStoreBootstrapCopyClient struct {
	grpc.ClientStream
}

func (x *vastoStoreBootstrapCopyClient) Recv() (*BootstrapCopyResponse, error) {
	m := new(BootstrapCopyResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *vastoStoreClient) TailBinlog(ctx context.Context, in *PullUpdateRequest, opts ...grpc.CallOption) (VastoStore_TailBinlogClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_VastoStore_serviceDesc.Streams[1], c.cc, "/pb.VastoStore/TailBinlog", opts...)
	if err != nil {
		return nil, err
	}
	x := &vastoStoreTailBinlogClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type VastoStore_TailBinlogClient interface {
	Recv() (*PullUpdateResponse, error)
	grpc.ClientStream
}

type vastoStoreTailBinlogClient struct {
	grpc.ClientStream
}

func (x *vastoStoreTailBinlogClient) Recv() (*PullUpdateResponse, error) {
	m := new(PullUpdateResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for VastoStore service

type VastoStoreServer interface {
	BootstrapCopy(*BootstrapCopyRequest, VastoStore_BootstrapCopyServer) error
	TailBinlog(*PullUpdateRequest, VastoStore_TailBinlogServer) error
}

func RegisterVastoStoreServer(s *grpc.Server, srv VastoStoreServer) {
	s.RegisterService(&_VastoStore_serviceDesc, srv)
}

func _VastoStore_BootstrapCopy_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(BootstrapCopyRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(VastoStoreServer).BootstrapCopy(m, &vastoStoreBootstrapCopyServer{stream})
}

type VastoStore_BootstrapCopyServer interface {
	Send(*BootstrapCopyResponse) error
	grpc.ServerStream
}

type vastoStoreBootstrapCopyServer struct {
	grpc.ServerStream
}

func (x *vastoStoreBootstrapCopyServer) Send(m *BootstrapCopyResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _VastoStore_TailBinlog_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PullUpdateRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(VastoStoreServer).TailBinlog(m, &vastoStoreTailBinlogServer{stream})
}

type VastoStore_TailBinlogServer interface {
	Send(*PullUpdateResponse) error
	grpc.ServerStream
}

type vastoStoreTailBinlogServer struct {
	grpc.ServerStream
}

func (x *vastoStoreTailBinlogServer) Send(m *PullUpdateResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _VastoStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.VastoStore",
	HandlerType: (*VastoStoreServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "BootstrapCopy",
			Handler:       _VastoStore_BootstrapCopy_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "TailBinlog",
			Handler:       _VastoStore_TailBinlog_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "vasto.proto",
}

func init() { proto.RegisterFile("vasto.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1750 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x58, 0xdd, 0x72, 0x1b, 0x49,
	0x15, 0xce, 0xe8, 0x77, 0x74, 0x46, 0x92, 0xed, 0xb6, 0x93, 0x68, 0x45, 0xc1, 0x26, 0xb3, 0x1b,
	0xd6, 0xc9, 0xee, 0x0a, 0xa3, 0x2d, 0x8a, 0x54, 0x42, 0xb1, 0x15, 0x3b, 0x66, 0x4d, 0xed, 0xc6,
	0x76, 0xb5, 0xbc, 0x29, 0x96, 0x82, 0x1a, 0xc6, 0x33, 0x6d, 0x79, 0xf0, 0x78, 0x7a, 0x98, 0x6e,
	0x2d, 0x51, 0xae, 0x78, 0x07, 0x2e, 0x78, 0x00, 0x5e, 0x81, 0xa2, 0x0a, 0xde, 0x81, 0xe7, 0xa0,
	0x8a, 0x2b, 0x6e, 0xb9, 0xa3, 0xfa, 0x6f, 0x7e, 0x24, 0x39, 0xb6, 0xe1, 0x4a, 0xea, 0xf3, 0xd7,
	0xe7, 0xf4, 0xf9, 0xce, 0x39, 0xdd, 0x03, 0xce, 0xb7, 0x3e, 0xe3, 0x74, 0x94, 0x66, 0x94, 0x53,
	0x54, 0x4b, 0x4f, 0x5d, 0x06, 0xfd, 0x5d, 0x3f, 0xf6, 0x93, 0x80, 0x60, 0xf2, 0xbb, 0x19, 0x61,
	0x1c, 0xbd, 0x0f, 0x4e, 0xe8, 0x73, 0xdf, 0x0b, 0x48, 0xc2, 0x49, 0x36, 0xb0, 0x1e, 0x58, 0xdb,
	0x1d, 0x0c, 0x82, 0xb4, 0x27, 0x29, 0x42, 0x80, 0x71, 0x9a, 0x11, 0x6f, 0x9a, 0xd1, 0x59, 0x3a,
	0xa8, 0x29, 0x01, 0x49, 0xfa, 0x42, 0x50, 0x0a, 0x81, 0x80, 0xce, 0x12, 0x3e, 0xa8, 0x3f, 0xb0,
	0xb6, 0x7b, 0x5a, 0x60, 0x4f, 0x50, 0xdc, 0x3e, 0x74, 0x27, 0x62, 0xf5, 0x8a, 0x30, 0xe6, 0x4f,
	0x89, 0xfb, 0xef, 0x1a, 0xf4, 0xf6, 0xe2, 0x88, 0x24, 0x5c, 0x53, 0xd0, 0x23, 0x68, 0x07, 0xf1,
	0x8c, 0x19, 0x07, 0x9c, 0xb1, 0x33, 0x4a, 0x4f, 0x47, 0x7b, 0x8a, 0x84, 0x0d, 0x0f, 0x7d, 0x0e,
	0xed, 0x59, 0x1a, 0xfa, 0x9c, 0x30, 0xe9, 0x86, 0x33, 0x7e, 0xa4, 0xc4, 0x4a, 0xa6, 0x46, 0x72,
	0x27, 0x4c, 0x18, 0x9d, 0x65, 0x01, 0xf9, 0x5a, 0x4a, 0x63, 0xa3, 0x85, 0x76, 0xa0, 0x95, 0x11,
	0x16, 0xbd, 0x25, 0xd2, 0x4b, 0x67, 0x3c, 0x58, 0xd6, 0xc7, 0x92, 0x8f, 0xb5, 0xdc, 0xf0, 0xd7,
	0xb0, 0xb9, 0xc2, 0x22, 0x7a, 0x0c, 0x2d, 0x19, 0x20, 0x1b, 0x58, 0x0f, 0xea, 0xdb, 0xce, 0x78,
	0x43, 0x18, 0xaa, 0x08, 0x62, 0x2d, 0x80, 0xbe, 0x03, 0x9d, 0x88, 0x79, 0x21, 0x89, 0x09, 0x27,
	0xd2, 0x6d, 0x1b, 0xdb, 0x11, 0x7b, 0x29, 0xd7, 0xc3, 0x33, 0x68, 0xa9, 0x0d, 0xd1, 0x0e, 0x6c,
	0x05, 0xb3, 0x2c, 0x23, 0x09, 0xf7, 0x74, 0xb8, 0x9e, 0x74, 0xd4, 0x92, 0xc7, 0x89, 0x34, 0x4f,
	0x1f, 0xc9, 0x44, 0x68, 0x3c, 0x81, 0x8d, 0x84, 0xbc, 0x59, 0x10, 0xaf, 0x49, 0xf1, 0x35, 0xc1,
	0x28, 0xc9, 0xba, 0x7f, 0xb5, 0xc0, 0x3e, 0xa1, 0x29, 0x8d, 0xe9, 0x74, 0x8e, 0x5e, 0xc3, 0x56,
	0x29, 0xe5, 0x46, 0xdf, 0x84, 0xf2, 0xa1, 0x08, 0xc5, 0xc8, 0x8e, 0x5e, 0xe6, 0x40, 0xd0, 0xe6,
	0xd8, 0x7e, 0xc2, 0xb3, 0x39, 0x46, 0xe1, 0x12, 0x63, 0x88, 0xe1, 0xfe, 0x15, 0xe2, 0x68, 0x1d,
	0xea, 0x17, 0x64, 0xae, 0xd1, 0x25, 0xfe, 0xa2, 0x87, 0xd0, 0xfc, 0xd6, 0x8f, 0x67, 0x44, 0x67,
	0xb2, 0x92, 0x70, 0xc5, 0x79, 0x56, 0x7b, 0x6a, 0xb9, 0xff, 0xb4, 0xa0, 0xad, 0xc9, 0xd7, 0x43,
	0xb5, 0xc8, 0x4a, 0xed, 0xba, 0xac, 0x8c, 0xe1, 0x2e, 0x79, 0x93, 0x92, 0x80, 0x93, 0xb0, 0x7a,
	0x80, 0x0a, 0xbe, 0x9b, 0x86, 0x59, 0x3e, 0xf0, 0xab, 0x52, 0xd4, 0xb8, 0x5d, 0x8a, 0x9a, 0xab,
	0x53, 0xf4, 0x16, 0xe0, 0x90, 0x86, 0x64, 0xc2, 0x7d, 0x3e, 0x63, 0xa8, 0x0f, 0xb5, 0x28, 0xd4,
	0xc9, 0xaf, 0x45, 0x21, 0xfa, 0x54, 0x84, 0x26, 0x38, 0xf2, 0xbc, 0xfa, 0xe3, 0xbb, 0x22, 0xb4,
	0x42, 0x7e, 0xa4, 0x7e, 0xb0, 0x16, 0x72, 0x3f, 0x85, 0x96, 0x36, 0xd4, 0x81, 0xe6, 0xfe, 0xab,
	0xe3, 0x93, 0x6f, 0xd6, 0xef, 0xa0, 0x1e, 0x74, 0x76, 0x8f, 0x8e, 0x4e, 0x26, 0x27, 0xf8, 0xc5,
	0xf1, 0xba, 0x25, 0x38, 0x78, 0xff, 0xc5, 0xcb, 0x6f, 0xd6, 0x6b, 0xee, 0x1f, 0x6b, 0xd0, 0xab,
	0x9c, 0x53, 0x69, 0xff, 0xa6, 0xdc, 0x7f, 0x00, 0xed, 0x84, 0xf0, 0xdf, 0xd3, 0xec, 0x42, 0x77,
	0x00, 0xb3, 0x14, 0x1c, 0x3f, 0x0c, 0x33, 0xc2, 0x98, 0x3c, 0xbb, 0x0e, 0x36, 0x4b, 0xf4, 0x01,
	0xf4, 0xfc, 0xf0, 0x32, 0x4a, 0x3c, 0xc3, 0x6f, 0x48, 0x7e, 0x57, 0x12, 0x5f, 0x68, 0xa1, 0x03,
	0xe8, 0x25, 0x34, 0x24, 0x9e, 0x72, 0x9c, 0xb0, 0x41, 0x53, 0xa6, 0xee, 0x83, 0xa5, 0xd4, 0x95,
	0xa2, 0x25, 0x1a, 0x84, 0xdd, 0xa4, 0x44, 0x1a, 0x1e, 0xc1, 0xc6, 0x92, 0x48, 0x19, 0x78, 0x3d,
	0x05, 0xbc, 0x0f, 0xab, 0xc0, 0xeb, 0x57, 0x0f, 0xb2, 0x8c, 0x3d, 0x0f, 0xec, 0xaf, 0x68, 0xe0,
	0xf3, 0x88, 0x26, 0xd7, 0x63, 0xef, 0x7f, 0x38, 0x20, 0xf7, 0x97, 0xd0, 0x97, 0x21, 0x1e, 0x10,
	0x3f, 0xe3, 0xa7, 0xc4, 0xbf, 0x41, 0x37, 0xfe, 0x08, 0x9a, 0x12, 0xc1, 0xda, 0xfb, 0x15, 0x08,
	0x57, 0x7c, 0xf7, 0x39, 0xac, 0xa9, 0xc6, 0x56, 0x18, 0xdf, 0x06, 0x3b, 0xd6, 0xf1, 0xe8, 0x36,
	0xdb, 0x15, 0xea, 0x26, 0x46, 0x9c, 0x73, 0xdd, 0x36, 0x34, 0xf7, 0x2f, 0x53, 0x3e, 0x77, 0x3f,
	0x03, 0x5b, 0x0f, 0x0a, 0x86, 0x3e, 0x02, 0x3b, 0xd3, 0xff, 0x75, 0xab, 0x90, 0x45, 0xab, 0xf9,
	0x38, 0x67, 0xba, 0x3f, 0x86, 0x0e, 0x26, 0x2c, 0xa5, 0x09, 0x23, 0x0c, 0x3d, 0x81, 0x4e, 0x66,
	0x16, 0x5a, 0xad, 0xab, 0xd4, 0x14, 0x11, 0x17, 0x6c, 0xf7, 0x2f, 0x16, 0xb4, 0xcd, 0x5c, 0x7a,
	0x00, 0xf5, 0x74, 0xc6, 0xb5, 0x9f, 0x32, 0x49, 0xc7, 0x33, 0x6e, 0xf6, 0x12, 0x2c, 0x21, 0x31,
	0x25, 0xbc, 0x9c, 0xc6, 0x2f, 0x48, 0x21, 0x31, 0x25, 0x1c, 0x3d, 0x83, 0xde, 0x94, 0x70, 0xef,
	0x74, 0xee, 0xa5, 0x19, 0x39, 0x8b, 0xde, 0xe8, 0xae, 0x7f, 0x4f, 0xcb, 0xee, 0xce, 0x8f, 0x25,
	0xd9, 0xe8, 0x38, 0xd3, 0x82, 0x26, 0x7a, 0x89, 0xee, 0xd9, 0x8d, 0xe2, 0xa4, 0x55, 0xd7, 0x36,
	0xf2, 0x5a, 0xc0, 0xfd, 0x93, 0x05, 0x50, 0x38, 0x27, 0xf2, 0x9d, 0x91, 0x34, 0x8e, 0x02, 0x5f,
	0xc3, 0xce, 0x2c, 0xd1, 0x23, 0xe8, 0xa7, 0x7e, 0xc6, 0x23, 0x71, 0xc6, 0xde, 0xb9, 0xcf, 0xce,
	0xa5, 0xf3, 0x0d, 0xdc, 0xcb, 0xa9, 0x07, 0x3e, 0x3b, 0x47, 0x8f, 0xa1, 0x73, 0x41, 0xe6, 0x9e,
	0x42, 0x69, 0xbd, 0x48, 0xd4, 0x97, 0x64, 0xfe, 0x5a, 0xd0, 0xb0, 0x7d, 0xa1, 0xff, 0xa1, 0xef,
	0x02, 0x70, 0x1e, 0x7b, 0x8c, 0x04, 0x34, 0x09, 0x75, 0x23, 0xea, 0x70, 0x1e, 0x4f, 0x24, 0xc1,
	0xfd, 0x11, 0x38, 0xd2, 0x31, 0x75, 0xc0, 0xa2, 0xa8, 0xe9, 0x85, 0x74, 0xca, 0xc6, 0x35, 0x7a,
	0x81, 0xee, 0x55, 0x9a, 0x4a, 0x27, 0xef, 0x1e, 0xa7, 0xd0, 0xab, 0x44, 0xfa, 0xff, 0x87, 0xa4,
	0xcb, 0x50, 0x04, 0xd3, 0x95, 0x65, 0xe8, 0x3e, 0x85, 0xbe, 0xd9, 0xe3, 0x96, 0xde, 0x3d, 0x05,
	0x28, 0x12, 0xfd, 0x0e, 0xd7, 0xf4, 0x9e, 0xb5, 0x62, 0xcf, 0xdf, 0x80, 0x23, 0x35, 0x6f, 0xb7,
	0xe1, 0x2d, 0xf2, 0xe1, 0xfe, 0xc1, 0x02, 0xb4, 0x8c, 0xac, 0x77, 0x38, 0x79, 0x0f, 0x5a, 0x1a,
	0x9b, 0xca, 0x4f, 0xbd, 0x42, 0x5b, 0xd0, 0x8c, 0xa3, 0xcb, 0xc8, 0x5c, 0xa7, 0xd4, 0x02, 0xb9,
	0xd0, 0x8b, 0x7d, 0xc6, 0x3d, 0x46, 0x48, 0xe2, 0x89, 0xe0, 0x1a, 0x52, 0xc9, 0x11, 0xc4, 0x09,
	0x21, 0xc9, 0x97, 0x64, 0xee, 0xfe, 0x16, 0x36, 0x2b, 0x1e, 0xdc, 0x32, 0xd8, 0x8f, 0x01, 0xf2,
	0x60, 0x45, 0xc3, 0xaa, 0x2f, 0x45, 0xdb, 0x31, 0xd1, 0x32, 0xf7, 0x6f, 0x96, 0xe8, 0x0f, 0x7a,
	0x87, 0x87, 0xe5, 0x8a, 0x5d, 0xcb, 0x2b, 0x56, 0x97, 0xb9, 0x2c, 0xd9, 0x87, 0xe5, 0x92, 0x5d,
	0xcb, 0x4b, 0xd6, 0x88, 0x88, 0x9a, 0x7d, 0xbe, 0xba, 0x66, 0xef, 0x2f, 0xd5, 0xac, 0x56, 0xaa,
	0x14, 0xed, 0x93, 0x85, 0xa2, 0x45, 0xe5, 0xa2, 0xd5, 0x0a, 0xa6, 0x6a, 0xc7, 0x60, 0x9b, 0x90,
	0xca, 0x53, 0x42, 0x41, 0x45, 0x9c, 0x7f, 0x31, 0x25, 0xba, 0x7a, 0x2a, 0xb8, 0x13, 0xe8, 0xef,
	0xd1, 0x74, 0xfe, 0x92, 0x26, 0xf2, 0x32, 0x3b, 0x25, 0x42, 0x8e, 0x9d, 0xfb, 0x99, 0x19, 0x95,
	0x6a, 0x81, 0x3e, 0x06, 0x14, 0xd0, 0x74, 0x2e, 0x86, 0x5a, 0xc6, 0x3d, 0x1e, 0x5d, 0x12, 0x2f,
	0x51, 0x07, 0x5d, 0xc7, 0x6b, 0x82, 0x33, 0x11, 0x8c, 0x93, 0xe8, 0x92, 0x1c, 0x32, 0xf7, 0x07,
	0xb0, 0xb5, 0x4b, 0x29, 0x67, 0x3c, 0xf3, 0x53, 0x61, 0xdd, 0x80, 0xe6, 0x3e, 0xb4, 0xe5, 0x64,
	0xcc, 0xef, 0x01, 0x2d, 0xb1, 0xfc, 0x79, 0xe8, 0xfe, 0xcb, 0x82, 0xbb, 0x0b, 0x1a, 0x3a, 0x05,
	0xd5, 0xe4, 0x59, 0xef, 0x4c, 0x1e, 0xfa, 0x15, 0xa0, 0xd3, 0x28, 0x89, 0xe9, 0xf4, 0xc4, 0x8f,
	0xe2, 0xe3, 0x8c, 0x4e, 0xe5, 0x88, 0x52, 0xb9, 0xf9, 0x44, 0x28, 0xad, 0xdc, 0x63, 0xb4, 0xbb,
	0xa4, 0x83, 0x57, 0xd8, 0x19, 0xfe, 0x0c, 0xd0, 0xb2, 0xa4, 0x28, 0x04, 0x46, 0xa6, 0x97, 0x24,
	0xe1, 0xa6, 0x10, 0xf4, 0x52, 0xe0, 0x91, 0x9e, 0x9d, 0x31, 0x8d, 0x8e, 0x06, 0xd6, 0x2b, 0x97,
	0xc3, 0xc6, 0xf1, 0x2c, 0x8e, 0xf5, 0x4d, 0xfe, 0x9a, 0xa3, 0x29, 0xdb, 0xaf, 0x5d, 0x65, 0xbf,
	0x5e, 0xb6, 0x5f, 0x14, 0x5a, 0xa3, 0x54, 0x68, 0xee, 0x9f, 0x2d, 0x40, 0xe5, 0x6d, 0x73, 0x88,
	0x77, 0xe5, 0x7d, 0xae, 0x1a, 0x83, 0x23, 0x68, 0x13, 0xbd, 0xcf, 0xfb, 0x20, 0x97, 0x5e, 0x25,
	0x18, 0x10, 0xa4, 0x23, 0xb5, 0xe1, 0x63, 0x68, 0x93, 0x84, 0x67, 0x51, 0x5e, 0x5d, 0xb2, 0x0e,
	0xd4, 0x46, 0xea, 0x5a, 0x63, 0xf8, 0xe8, 0x7b, 0xe0, 0xd0, 0x99, 0x30, 0xe5, 0xb1, 0x79, 0x12,
	0x48, 0x0f, 0x6d, 0xdc, 0xa1, 0x33, 0x7e, 0x74, 0x36, 0x99, 0x27, 0x81, 0xfb, 0x0f, 0x0b, 0x9c,
	0x92, 0xe2, 0x8a, 0x66, 0x5c, 0x5f, 0xd5, 0x8c, 0x5d, 0xe8, 0xa9, 0x07, 0x51, 0xe8, 0xf9, 0x5c,
	0x00, 0xb3, 0x21, 0xa5, 0x1c, 0x4d, 0x7c, 0xc1, 0x0f, 0xd9, 0xc2, 0x60, 0x69, 0x2e, 0x0c, 0x16,
	0x51, 0x30, 0x41, 0x16, 0x0c, 0x5a, 0xea, 0x5a, 0x15, 0x64, 0x01, 0x1a, 0x42, 0xfe, 0xaa, 0x19,
	0xb4, 0xab, 0xaf, 0x1c, 0x53, 0x5e, 0xf6, 0x8a, 0xf2, 0xea, 0x94, 0xcb, 0x6b, 0x04, 0xce, 0x57,
	0x11, 0xe3, 0x37, 0x7d, 0x9a, 0xba, 0xbf, 0x80, 0xae, 0x92, 0xd7, 0xe9, 0xb9, 0xe1, 0x33, 0xf2,
	0x21, 0x74, 0x03, 0x79, 0x35, 0xd2, 0x2f, 0x56, 0x85, 0x14, 0x47, 0xd1, 0xd4, 0x93, 0x75, 0x02,
	0x3d, 0xfd, 0x10, 0xbc, 0xe9, 0x33, 0x59, 0x1a, 0x5d, 0x7a, 0x88, 0x39, 0x41, 0xe9, 0x86, 0xff,
	0xf7, 0x3a, 0xf4, 0x95, 0xd5, 0xbc, 0x1e, 0xb6, 0xa0, 0x49, 0xb2, 0x8c, 0x1a, 0x83, 0x6a, 0x21,
	0xce, 0x32, 0x2d, 0xd7, 0x63, 0x07, 0xe7, 0x6b, 0xf4, 0x13, 0x78, 0xef, 0xdc, 0x67, 0x87, 0x94,
	0x47, 0x67, 0x91, 0x78, 0x9e, 0x08, 0x9f, 0xd9, 0x09, 0x95, 0x0d, 0x45, 0xa6, 0xdb, 0xc6, 0x57,
	0x0b, 0xa0, 0x67, 0x30, 0x28, 0x31, 0xe5, 0xc5, 0x31, 0x57, 0x56, 0xf0, 0xba, 0x92, 0x8f, 0xbe,
	0x0f, 0x7d, 0x3f, 0x23, 0x8a, 0x36, 0x49, 0xe3, 0x88, 0x4b, 0x58, 0xd8, 0x78, 0x81, 0x8a, 0x76,
	0x60, 0x33, 0xa7, 0x60, 0x35, 0xe6, 0x38, 0x09, 0x25, 0x56, 0x6c, 0xbc, 0x8a, 0x85, 0x3e, 0x81,
	0x8d, 0x9c, 0xbc, 0xe7, 0xcf, 0xa6, 0xe7, 0xfc, 0xeb, 0x54, 0x83, 0x68, 0x99, 0xb1, 0x10, 0x43,
	0x29, 0x40, 0x9a, 0x4a, 0x88, 0x55, 0x63, 0xa8, 0xf0, 0xd1, 0x53, 0xb8, 0xbf, 0x32, 0x3e, 0x9a,
	0x4a, 0x24, 0xda, 0xf8, 0x2a, 0xf6, 0xf8, 0x3f, 0x16, 0x38, 0xaf, 0x7d, 0xc6, 0xe9, 0x2b, 0x5f,
	0x82, 0xe8, 0xb9, 0x40, 0xc8, 0x34, 0x92, 0xc9, 0x15, 0x72, 0x08, 0xe5, 0x57, 0xf1, 0xfc, 0xc6,
	0x3d, 0x5c, 0xcf, 0x69, 0xe6, 0xdb, 0xc7, 0x9d, 0x6d, 0x6b, 0xc7, 0x42, 0x3f, 0x15, 0x40, 0x50,
	0xca, 0xca, 0x3f, 0xb4, 0x59, 0x7c, 0x89, 0x28, 0xd4, 0x37, 0x96, 0x3e, 0x4f, 0x68, 0xfd, 0x1f,
	0x02, 0x08, 0xe0, 0x2b, 0x07, 0x91, 0x6c, 0x20, 0xa5, 0xc2, 0x51, 0xdb, 0x96, 0x2b, 0xc3, 0xbd,
	0x23, 0xee, 0xc2, 0x0a, 0x7b, 0xe6, 0x35, 0xbd, 0xa1, 0x6f, 0xe1, 0x05, 0xc8, 0x87, 0xa8, 0x20,
	0x19, 0x84, 0xba, 0x77, 0x76, 0xac, 0xb1, 0xb8, 0xe0, 0xca, 0xd8, 0x55, 0xa4, 0x07, 0xd0, 0xab,
	0x8c, 0x06, 0x34, 0x58, 0x31, 0x2d, 0x94, 0xc5, 0xf7, 0xae, 0x9c, 0x23, 0xc2, 0x30, 0xfa, 0x1c,
	0x40, 0x8c, 0x07, 0x35, 0x28, 0xd0, 0x5d, 0x75, 0x67, 0x58, 0x68, 0xf6, 0xc3, 0x7b, 0x8b, 0xe4,
	0xc2, 0xc0, 0x69, 0x4b, 0x7e, 0xda, 0xfa, 0xec, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf3, 0x66,
	0xe8, 0x0a, 0xe9, 0x12, 0x00, 0x00,
}
